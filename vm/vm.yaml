
        
- azure_rm_virtualmachine:
    resource_group: "{{async_item.value['resourcegroup']}}"
    name: "{{ async_item.key | replace('_', '') }}"
    admin_username: "{{ async_item.value['user_name']}}"
    ssh_password_enabled: false
    image:
      offer: "{{ async_item.value['updated_os_distro']  }}"
      publisher: "{{async_item.value['image']['publisher_name']}}"
      sku: "{{ async_item.value['updated_os_version']  }}"
      version: latest
    ssh_public_keys:
      - path: /home/{{ async_item.value['user_name'] }}/.ssh/authorized_keys
        key_data: "{{ async_item.value['user_key_pair']['keys']['public_key'] | b64decode }}"
    vm_size: "{{async_item.value['flavor_name']}}"
#   data_disks:
#     - lun: 0
#       disk_size_gb: "{{ async_item.value['disk_size'] | replace(' MB','') | int // 1000 }}"
#       caching: ReadWrite
#       managed_disk_type: StandardSSD_LRS
    open_ports:
      - 22
      - 80
      - 443
      - 8080
      - 6443
      - 30000-32767
    tags:
        name: "{{ async_item.key }}"
  async: 2400
  poll: 0
  loop: "{{ vm_info }}"
  loop_control:
    loop_var: "async_item"
  register: vm_output
  

- name: Check sync status
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ vm_output.results }}"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 500
  
- find:
    paths: /tmp/vm_attribues
    patterns: "*.json"
#     age: 1sec
  register: older_files

- file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ older_files.files }}"
  
  
- local_action: copy content={{ item }} dest=/tmp/vm_output_{{item.ansible_job_id}}.json
  loop: "{{async_poll_results.results}}"

- file:
    path:  /tmp/vm_attribues
    state: directory

- shell:  jq '.ansible_facts.azure_vm.properties | {"{{ item.ansible_facts.azure_vm.tags.name }}":{public_ip:.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress,node_type:.hardwareProfile.vmSize}}' /tmp/vm_output_{{item.ansible_job_id}}.json > /tmp/vm_attribues/{{item.ansible_job_id}}.json
  loop: "{{async_poll_results.results}}"
 
- shell: jq -s '.' /tmp/vm_attribues/*.json > /tmp/vm_attribues.json

- include_vars:
    dir: /tmp/vm_attribues/
    extensions:
      - 'json'
    name: vm_attribues
      
      
# - debug:
#     var: item
#   loop: "{{async_poll_results.results}}"  
     
- set_stats:
    data:
      vm: "{{ vm_attribues }}"
      
  
# - debug:
#     var: async_vm_output
