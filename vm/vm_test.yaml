
- azure_rm_virtualmachine:
    resource_group: "{{item.value['resourcegroup']}}"
    name: "{{ item.key | replace('_', '') }}"
    admin_username: "{{ item.value['user_name']}}"
    ssh_password_enabled: false
    image:
      offer: "{{ item.value['updated_os_distro']  }}"
      publisher: "{{item.value['image']['publisher_name']}}"
      sku: "{{ item.value['updated_os_version']  }}"
      version: latest
    ssh_public_keys:
      - path: /home/{{ item.value['user_name'] }}/.ssh/authorized_keys
        key_data: "{{ item.value['user_key_pair']['keys']['public_key'] | b64decode }}"
    vm_size: "{{item.value['flavor_name']}}"
    open_ports:
      - 22
      - 80
      - 443
      - 8080
      - 6443
      - 30000-32767
  async: 2400
  poll: 0
  loop: "{{ vm_info | dict2items }}"
  register: vm_output

- name: Check sync status
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_results.results }}"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 500
  
- find:
    paths: /tmp/
    patterns: "vm_output_*.json"
    age: 10d
  register: older_files

- file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ older_files.files }}"
  
  
- local_action: copy content={{ item }} dest=/tmp/vm_output_{{item.ansible_job_id}}.json
  loop: "{{async_poll_results.results}}"


- shell:  jq '.' /tmp/vm_output_{{item.ansible_job_id}}.json
  register: vm_provision_attributes
  loop: "{{async_poll_results.results}}"
 
  
- debug:
    var: item
  loop: "{{async_poll_results.results}}"



  
     
# - set_stats:
#     data:
#       vm: "{{ vm_provision_attributes.stdout }}"
      
  
# - debug:
#     var: async_vm_output
